par(mfrow=c(1,2))
plot(x, marker=mx)
plot(y, marker=my)
#set.seed(14)
known=list(c(10,v),c(11,s))
lp <- urnSim(R=R, x=0, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y,z))
ld <- urnSim(R=R, x=2, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y,z), id.U=c(4,5),id.V=c(11,10))
lp/ld
pDO=0.2;pDI=0.3
N=200000
mx=marker(x,11,s,alleles=alleles,afreq=p)
my=marker(y,10,v,alleles=alleles,afreq=p)
par(mfrow=c(1,2))
plot(x, marker=mx)
plot(y, marker=my)
#set.seed(14)
known=list(c(10,v),c(11,s))
lp <- urnSim(R=R, x=0, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y,z))
ld <- urnSim(R=R, x=2, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y,z), id.U=c(4,5),id.V=c(11,10))
lp/ld
source('~/Documents/POST DOC/R/Urn/urn_new2.R')
alleles <-1:4
p <- c(0.044, 0.166, 0.11, 0.68)
names(p) <- alleles
R <- 1:3
v <- c(1,2)
s <- c(3,3)
#Suspect
x <- singleton(11,sex=2)
#Victim
y <- singleton(10)
#Unrelated unknown
z <- halfCousinPed(0)
pDO=0.2;pDI=0.3
N=200000
mx=marker(x,11,s,alleles=alleles,afreq=p)
my=marker(y,10,v,alleles=alleles,afreq=p)
par(mfrow=c(1,2))
plot(x, marker=mx)
plot(y, marker=my)
#set.seed(14)
known=list(c(10,v),c(11,s))
lp <- urnSim(R=R, x=0, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y,z))
ld <- urnSim(R=R, x=2, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y,z), id.U=c(4,5),id.V=c(11,10))
lp/ld
simLR <- function(R, x, alleles, afreq, pDO, pDI, N, known_genotypes=NULL, ped=NULL, id.U=NULL, id.V=NULL) {
}
source('~/Dropbox/euro/euroMix/R/simLR.R')
?simLR
simLR
prompt(simLR)
pDO=0;pDI=0
N=200000
source("Users/gdorum/Dropbox/euro/euroMix/R/simLR.R")
source("/Users/gdorum/Dropbox/euro/euroMix/R/simLR.R")
alleles <- 1:2
p <- c(0.11,0.89)
names(p)=1:length(p)
pDO=0.1;pDI=0.05
N=20000
R <- 1
s <- c(1,2)
#set.seed(14)
lp <- simLR(R, x=0, alleles, p, pDO, pDI, N, known_genotypes=list(s))
ld <- simLR(R, x=1, alleles, p, pDO, pDI, N)
LR.sim=lp/ld
LR.sim
p9=p[1];d=pDO;cc=pDI
LR.Klaas=d/(p9*(p9-d*(p9-2)))+(d^2*(d*(p9-1)^2-p9^2))*cc/(p9*(d-1)*(p9-d*(p9-1))^2)
#Forensim
LR.forensim=LR(R, Tp=s, Td=NULL,Vp=NULL,Vd=NULL, xp=0,xd=1, theta=0, prDHet=rep(pDO,6), prDHom=rep(pDO^2,6), prC=pDI, freq=p)
res=c(LR.sim,LR.Klaas,LR.forensim$LR)
names(res)=c("sim","Klaas","forensim")
res
alleles <-1:4
p <- c(0.044, 0.166, 0.11, 0.68)
names(p) <- alleles
R <- 1:3
v <- c(1,2)
s <- c(3,3)
x=halfCousinPed(0)
y <- singleton(6,sex=2)
pDO=0;pDI=0
N=200000
mx=marker(x,4,s,alleles=alleles,afreq=p)
my=marker(y,6,v,alleles=alleles,afreq=p)
par(mfrow=c(1,2))
plot(x, marker=mx)
plot(y, marker=my)
#set.seed(14)
lp <- simLR(R=R, x=0, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=list(c(6,v),c(4,s)), ped=list(x,y))
ld <- simLR(R=R, x=1, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=list(c(6,v),c(4,s)), ped=list(x,y), id.U=5,id.V=4)
lp/ld
known_genotypes=list(c(6,v),c(4,s))
id.U=5
id.V=4
ped=list(x,y)
afreq=p
x<-1
fitEvid <- function(x,R){
if(max(x) > 0) x=x[x>0]
all(x%in%R) && all(R%in%x)
}
na <- length(alleles)
#------- Genotypes for known and unknown contributors  --------
#Without kinship
if(is.null(ped)){
#Genotypes of known contributors
g <- numeric()
if(length(known_genotypes)>0) {
#Extract genotypes for known contributors
gtKnown <- lapply(known_genotypes,function(x) { if(length(x)==2) x[1:2] else x[2:3] })
g <- matrix(nrow=length(known_genotypes)*2,rep(unlist(gtKnown),N),byrow=FALSE)
}
#Genotypes of unknown contributors are sampled randomly from alleles
if(x > 0) g <- rbind( g, matrix( sample(alleles, x*2*N, replace=TRUE, prob=p), nrow=x*2))
#With kinshp
} else {
if (inherits(ped, c("linkdat", "singleton")))
ped = list(ped)
#Get index of individuals with known genotype
all_typed = sapply(known_genotypes, "[", 1)
#Index of known contributors
contrib_typed = setdiff(all_typed, id.V)
#Index of unknown contributors
contrib_untyped = id.U
#Checks whether index of known individuals are in contrib_typed. Finds all unique alleles
K = unique(unlist(lapply(known_genotypes, function(triple) if (triple[1] %in% contrib_typed) triple[2:3])))
#Any alleles not explained by contributors?
R_not_masked = setdiff(R, K)
if (length(alleles) == 1)
alleles = 1:alleles
partialmarkers = lapply(ped, function(ped) {
#Create empty marker
m <- marker(ped, alleles = alleles, afreq = afreq)
#Add known genotypes to marker
for (tup in known_genotypes) if (tup[1] %in% ped$orig.ids)
m <- modifyMarker(ped, m, ids = tup[1], genotype = tup[2:3])
m
})
#Genotypes of known contributors
g <- numeric()
if(length(contrib_typed)>0) {
#Extract genotypes for known contributors
gtKnown <- lapply(known_genotypes[all_typed==contrib_typed],function(x) { if(length(x)==2) x[1:2] else x[2:3] })
g <- matrix(nrow=length(contrib_typed)*2,rep(unlist(gtKnown),N),byrow=FALSE)
}
#Genotypes for unknown contributors
if(length(contrib_untyped)>0) {
tid1 <- proc.time()
for( i in 1:length(ped)){ #APPLY HER???
#Check if the unknown contributors are in the given pedigree
available <- contrib_untyped[contrib_untyped %in% ped[[i]]$orig.ids]
if( length(available) > 0 ) {
#set.seed(14)
ysim <- markerSim(ped[[i]], N=N, available=available, partialmarker=partialmarkers[[i]])
#g <- rbind(g,matrix(nrow=2,unlist(lapply(ysim$markerdata, function(m) m[available,]))))
g <- rbind(g,sapply(ysim$markerdata, function(m) t(m[available-min(ped[[i]]$orig.ids)+1,])))
}
}
tid2 <- proc.time()
tid3 <- proc.time()
lapply(ped, function(y){
#Check if the unknown contributors are in the given pedigree
available <- contrib_untyped[contrib_untyped %in% y$orig.ids]
if( length(available) > 0 ) {
#set.seed(14)
ysim <- markerSim(y, N=N, available=available, partialmarker=partialmarkers[[i]])
#g <- rbind(g,matrix(nrow=2,unlist(lapply(ysim$markerdata, function(m) m[available,]))))
g <- rbind(g,sapply(ysim$markerdata, function(m) t(m[available-min(y$orig.ids)+1,])))
})
}
tid4 <- proc.time()
}
}
contrib_untyped
if (inherits(ped, c("linkdat", "singleton")))
ped = list(ped)
#Get index of individuals with known genotype
all_typed = sapply(known_genotypes, "[", 1)
#Index of known contributors
contrib_typed = setdiff(all_typed, id.V)
#Index of unknown contributors
contrib_untyped = id.U
#Checks whether index of known individuals are in contrib_typed. Finds all unique alleles
K = unique(unlist(lapply(known_genotypes, function(triple) if (triple[1] %in% contrib_typed) triple[2:3])))
#Any alleles not explained by contributors?
R_not_masked = setdiff(R, K)
if (length(alleles) == 1)
alleles = 1:alleles
partialmarkers = lapply(ped, function(ped) {
#Create empty marker
m <- marker(ped, alleles = alleles, afreq = afreq)
#Add known genotypes to marker
for (tup in known_genotypes) if (tup[1] %in% ped$orig.ids)
m <- modifyMarker(ped, m, ids = tup[1], genotype = tup[2:3])
m
})
g <- numeric()
if(length(contrib_typed)>0) {
#Extract genotypes for known contributors
gtKnown <- lapply(known_genotypes[all_typed==contrib_typed],function(x) { if(length(x)==2) x[1:2] else x[2:3] })
g <- matrix(nrow=length(contrib_typed)*2,rep(unlist(gtKnown),N),byrow=FALSE)
}
contrib_untyped
if(length(contrib_untyped)>0) {
tid1 <- proc.time()
for( i in 1:length(ped)){ #APPLY HER???
#Check if the unknown contributors are in the given pedigree
available <- contrib_untyped[contrib_untyped %in% ped[[i]]$orig.ids]
if( length(available) > 0 ) {
#set.seed(14)
ysim <- markerSim(ped[[i]], N=N, available=available, partialmarker=partialmarkers[[i]])
#g <- rbind(g,matrix(nrow=2,unlist(lapply(ysim$markerdata, function(m) m[available,]))))
g <- rbind(g,sapply(ysim$markerdata, function(m) t(m[available-min(ped[[i]]$orig.ids)+1,])))
}
}
tid2 <- proc.time()
tid3 <- proc.time()
lapply(ped, function(y){
#Check if the unknown contributors are in the given pedigree
available <- contrib_untyped[contrib_untyped %in% y$orig.ids]
if( length(available) > 0 ) {
#set.seed(14)
ysim <- markerSim(y, N=N, available=available, partialmarker=partialmarkers[[i]])
#g <- rbind(g,matrix(nrow=2,unlist(lapply(ysim$markerdata, function(m) m[available,]))))
g <- rbind(g,sapply(ysim$markerdata, function(m) t(m[available-min(y$orig.ids)+1,])))
}})
}
tid4 <- proc.time()
}
library(forensim)
library(paramlink)
#source("Urn/urn_new2.R")
source("/Users/gdorum/Dropbox/euro/euroMix/R/simLR.R")
#### Case B. Haned et al.
alleles <- 1:2
p <- c(0.11,0.89)
names(p)=1:length(p)
pDO=0.1;pDI=0.05
N=20000
R <- 1
s <- c(1,2)
#set.seed(14)
lp <- simLR(R, x=0, alleles, p, pDO, pDI, N, known_genotypes=list(s))
ld <- simLR(R, x=1, alleles, p, pDO, pDI, N)
LR.sim=lp/ld
# Klaas
p9=p[1];d=pDO;cc=pDI
LR.Klaas=d/(p9*(p9-d*(p9-2)))+(d^2*(d*(p9-1)^2-p9^2))*cc/(p9*(d-1)*(p9-d*(p9-1))^2)
#Forensim
LR.forensim=LR(R, Tp=s, Td=NULL,Vp=NULL,Vd=NULL, xp=0,xd=1, theta=0, prDHet=rep(pDO,6), prDHom=rep(pDO^2,6), prC=pDI, freq=p)
res=c(LR.sim,LR.Klaas,LR.forensim$LR)
names(res)=c("sim","Klaas","forensim")
res
#------------------------------------------------------
#       Fung & Hu, examples Table 7.3 p. 154
#------------------------------------------------------
#HP: victim + suspect
#HD: victim + half sib of suspect
alleles <-1:4
p <- c(0.044, 0.166, 0.11, 0.68)
names(p) <- alleles
R <- 1:3
v <- c(1,2)
s <- c(3,3)
x=halfCousinPed(0)
y <- singleton(6,sex=2)
pDO=0;pDI=0
N=200000
mx=marker(x,4,s,alleles=alleles,afreq=p)
my=marker(y,6,v,alleles=alleles,afreq=p)
par(mfrow=c(1,2))
plot(x, marker=mx)
plot(y, marker=my)
#set.seed(14)
lp <- simLR(R=R, x=0, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=list(c(6,v),c(4,s)), ped=list(x,y))
ld <- simLR(R=R, x=1, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=list(c(6,v),c(4,s)), ped=list(x,y), id.U=5,id.V=4)
lp/ld
alleles <-1:4
p <- c(0.044, 0.166, 0.11, 0.68)
names(p) <- alleles
R <- 1:3
v <- c(1,2)
s <- c(3,3)
#Suspect pedigree
x <- halfCousinPed(0)
#Victim
y <- singleton(10)
#Unrelated unknown
z <- singleton(11,sex=2)
pDO=0;pDI=0
N=200000
mx=marker(x,4,s,alleles=alleles,afreq=p)
my=marker(y,10,v,alleles=alleles,afreq=p)
par(mfrow=c(1,2))
plot(x, marker=mx)
plot(y, marker=my)
#set.seed(14)
known=list(c(10,v),c(4,s))
lp <- simLR(R=R, x=0, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y,z))
ld <- simLR(R=R, x=2, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y,z), id.U=c(5,11),id.V=c(4,10))
lp/ld
alleles <-1:4
p <- c(0.044, 0.166, 0.11, 0.68)
names(p) <- alleles
R <- 1:3
v <- c(1,2)
s <- c(3,3)
#Suspect
x <- singleton(11,sex=2)
#Victim
y <- singleton(10)
#Unrelated unknown
z <- halfCousinPed(0)
pDO=0;pDI=0
N=200000
mx=marker(x,11,s,alleles=alleles,afreq=p)
my=marker(y,10,v,alleles=alleles,afreq=p)
par(mfrow=c(1,2))
plot(x, marker=mx)
plot(y, marker=my)
#set.seed(14)
known=list(c(10,v),c(11,s))
lp <- simLR(R=R, x=0, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y,z))
ld <- simLR(R=R, x=2, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y,z), id.U=c(4,5),id.V=c(11,10))
lp/ld
?singleton
alleles <-1:4
p <- c(0.044, 0.166, 0.11, 0.68)
names(p) <- alleles
R <- 1:3
known <- list(c(6,1,2),c(4,3,3))
x <- halfCousinPed(0)
y <- singleton(6,sex=2)
pDO <- 0.1
pDI <- 0.05
N <- 20000
lp <- simLR(R=R, x=0, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y))
ld <- simLR(R=R, x=1, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y), id.U=5,id.V=4)
lp/ld
alleles <-1:4
p <- c(0.044, 0.166, 0.11, 0.68)
names(p) <- alleles
R <- 1:3
known <- list(c(6,1,2),c(4,3,3))
x <- halfCousinPed(0)
y <- singleton(6,sex=2)
pDO <- 0
pDI <- 0
N <- 20000
lp <- simLR(R=R, x=0, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y))
ld <- simLR(R=R, x=1, alleles=alleles, afreq=p, pDO, pDI, N, known_genotypes=known, ped=list(x,y), id.U=5,id.V=4)
lp/ld
install.packages("~/Dropbox/euro/euroMix_1.1.tgz", repos = NULL)
library(euroMix)
?simLR
install.packages("~/Dropbox/euro/euroMix_1.1.tgz", repos = NULL)
library(euroMix)
?LRsim
?simLR
install.packages("~/Dropbox/euro/euroMix_1.1.tgz", repos = NULL)
library(euroMix)
?simLR
?famMix
?rm.packages
detach(simLR)
detach(euroMix)
detach(package:euroMix)
detach("euroMix")
detach("package:euroMix")
?detach
install.packages("~/Dropbox/euro/euroMix_1.1.tgz", repos = NULL)
library(euroMix)
?simLR
alleles <- 1:2
p <- c(0.11,0.89)
names(p)=1:length(p)
pDO=0.1;pDI=0.05
N=20000
R <- 1
s <- c(1,2)
p9=p[1];d=pDO;cc=pDI
LR.Klaas=d/(p9*(p9-d*(p9-2)))+(d^2*(d*(p9-1)^2-p9^2))*cc/(p9*(d-1)*(p9-d*(p9-1))^2)
LR.Klaas
ld <- simLR(R, x=1, alleles, p, pDO, pDI, N)
ld
lp <- simLR(R, x=0, alleles, p, pDO, pDI, N, known_genotypes=list(s))
lp
s
alleles
s <- c(2,2)
lp <- simLR(R, x=0, alleles, p, pDO, pDI, N, known_genotypes=list(s))
ld <- simLR(R, x=1, alleles, p, pDO, pDI, N)
lp
ld
alleles
p
p <- c(0.5,0.5)
s
lp <- simLR(R, x=0, alleles, p, pDO, pDI, N, known_genotypes=list(s))
ld <- simLR(R, x=1, alleles, p, pDO, pDI, N)
lp
ld
s <- c(1,1)
lp <- simLR(R, x=0, alleles, p, pDO, pDI, N, known_genotypes=list(s))
ld <- simLR(R, x=1, alleles, p, pDO, pDI, N)
lp
ld
p
p <- c(0.11,0.89)
lp <- simLR(R, x=0, alleles, p, pDO, pDI, N, known_genotypes=list(s))
ld <- simLR(R, x=1, alleles, p, pDO, pDI, N)
lp
ld
p
10^-22
0.3*0.7
0.01*0.99
0.9*0.1
0.5^2
?log
log(100,10)
log(1,10)
log(33113,10)
log(3.72*10^(-22),10)
log(4.5,10)
4.5^10
log10(Hd)
log10(0.1)
log10(0.01)
-log(5,10)
log(5,10)
log(5.09*10^(-4),10)
id.defendant=1;id.mother=2;id.victim=3;id.unrelated=4
victim=singleton(id.victim,sex=2)
defendant=singleton(id.defendant,sex=1)
unrelated=singleton(id.unrelated,sex=1)
alleles=1:4
p=c(0.2,0.2,0.2,0.4)
#####
#HP: defendant+victim+unrelated
#HD: defendant+unrelated
#All unrelated
known1=list(c(id.defendant,2,2),c(id.victim,2,3))
R1=2:3
#Defendant and unrelated are both male and must be homozygotes for the marker
lp1 <- paraMix(list(victim,defendant,unrelated), R1, id=id.unrelated,
id.V=NULL, alleles=alleles,afreq=p, known=known1, Xchrom=TRUE)
ld1 <- paraMix(list(victim,defendant,unrelated), R1, id=id.unrelated,
id.V=id.victim, alleles=alleles,afreq=p, known=known1, Xchrom=TRUE)
(LR1=lp1$lik/ld1$lik)
library(euroMix)
#Example real data. Xchrom
id.defendant=1;id.mother=2;id.victim=3;id.unrelated=4
victim=singleton(id.victim,sex=2)
defendant=singleton(id.defendant,sex=1)
unrelated=singleton(id.unrelated,sex=1)
alleles=1:4
p=c(0.2,0.2,0.2,0.4)
#####
#HP: defendant+victim+unrelated
#HD: defendant+unrelated
#All unrelated
known1=list(c(id.defendant,2,2),c(id.victim,2,3))
R1=2:3
#Defendant and unrelated are both male and must be homozygotes for the marker
lp1 <- paraMix(list(victim,defendant,unrelated), R1, id=id.unrelated,
id.V=NULL, alleles=alleles,afreq=p, known=known1, Xchrom=TRUE)
ld1 <- paraMix(list(victim,defendant,unrelated), R1, id=id.unrelated,
id.V=id.victim, alleles=alleles,afreq=p, known=known1, Xchrom=TRUE)
(LR1=lp1$lik/ld1$lik)
victim=singleton(id.victim,sex=2)
library(paramlink)
#Example real data. Xchrom
id.defendant=1;id.mother=2;id.victim=3;id.unrelated=4
victim=singleton(id.victim,sex=2)
defendant=singleton(id.defendant,sex=1)
unrelated=singleton(id.unrelated,sex=1)
alleles=1:4
p=c(0.2,0.2,0.2,0.4)
#####
#HP: defendant+victim+unrelated
#HD: defendant+unrelated
#All unrelated
known1=list(c(id.defendant,2,2),c(id.victim,2,3))
R1=2:3
#Defendant and unrelated are both male and must be homozygotes for the marker
lp1 <- paraMix(list(victim,defendant,unrelated), R1, id=id.unrelated,
id.V=NULL, alleles=alleles,afreq=p, known=known1, Xchrom=TRUE)
ld1 <- paraMix(list(victim,defendant,unrelated), R1, id=id.unrelated,
id.V=id.victim, alleles=alleles,afreq=p, known=known1, Xchrom=TRUE)
(LR1=lp1$lik/ld1$lik)
known1=list(c(id.defendant,2,3),c(id.victim,2,3))
R1=2:3
#Defendant and unrelated are both male and must be homozygotes for the marker
lp1 <- paraMix(list(victim,defendant,unrelated), R1, id=id.unrelated,
id.V=NULL, alleles=alleles,afreq=p, known=known1, Xchrom=TRUE)
ld1 <- paraMix(list(victim,defendant,unrelated), R1, id=id.unrelated,
id.V=id.victim, alleles=alleles,afreq=p, known=known1, Xchrom=TRUE)
(LR1=lp1$lik/ld1$lik)
install.packages("~/Desktop/GSEArot_0.9/GSEArot_0.9.tgz", repos = NULL)
library(GSEArot)
Rd2txt("es.Rd")
library(tools)
Rd2txt("es.Rd")
setwd("~/Desktop/GSEArot_0.9/GSEArot_0.9/GSEArot/man")
Rd2txt("es.Rd")
?ttols
?tools
library(help = "tools")
install.packages("roxygen2")
